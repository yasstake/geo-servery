services:
  webapp:
    build: ./app
    container_name: gss-docker
    ports:
      - 80:80
      - 443:443
    environment:
      POSTGRES_USER: ${GSS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${GSS_POSTGRES_PASSWORD}
      POSTGRES_PORT: ${GSS_POSTGRES_PORT}
      POSTGRES_DB: ${GSS_POSTGRES_DB}
      POSTGRES_HOST: 'database'
      SECRET_KEY: ${GSS_SECRETKEY}
      DEBUG: "false"
      ALLOWED_HOSTS: ${GSS_ALLOWED_HOSTS}
      CORS_ALLOWED_ORIGINS: ${GSS_CORS_ALLOWED_ORIGINS}
      CSRF_TRUSTED_ORIGINS: ${GSS_CSRF_TRUSTED_ORIGINS}
      WEB_CONCURRENCY: 4 # gunicorn workers
    depends_on:
      - database
    volumes:
      - ${GSS_MEDIAFOLDER}:/basefolder/media
      - ${GSS_DYNAMICMIGRATIONSFOLDER}:/basefolder/gss/formlayers/migrations
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - gss_network

  database:
    image: postgis/postgis:15-3.3
    container_name: gss-postgres
    hostname: postgres
    ports:
      - ${GSS_POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${GSS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${GSS_POSTGRES_PASSWORD}
      POSTGRES_PORT: ${GSS_POSTGRES_PORT}
      POSTGRES_DB: ${GSS_POSTGRES_DB}
    networks:
      - gss_network
    volumes:
     - ${GSS_POSTGRESFOLDER}:/var/lib/postgresql/data

networks:
  gss_network:
    driver: bridge


